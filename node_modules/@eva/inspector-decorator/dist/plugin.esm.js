function getIDEPropsPropertyObj(target, propertyKey) {
    //@ts-ignore
    if (!target.constructor.IDEProps) {
        //@ts-ignore
        target.constructor.IDEProps = {};
    }
    if (!target.constructor.IDEProps[propertyKey]) {
        target.constructor.IDEProps[propertyKey] = {};
    }
    var propertyObj = target.constructor.IDEProps[propertyKey];
    return propertyObj;
}

function type(type) {
    return function (target, propertyKey) {
        var prop = getIDEPropsPropertyObj(target, propertyKey);
        //@ts-ignore
        prop.key = propertyKey;
        prop.type = type;
    };
}

function step(step) {
    return function (target, propertyKey) {
        var prop = getIDEPropsPropertyObj(target, propertyKey);
        //@ts-ignore
        prop.step = step;
    };
}

export { step, type };
