'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tween_js = require('@tweenjs/tween.js');
var eva_js = require('@eva/eva.js');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

var easingMap = {
    linear: tween_js.Easing.Linear.None,
    'ease-in': tween_js.Easing.Quadratic.In,
    'ease-out': tween_js.Easing.Quadratic.Out,
    'ease-in-out': tween_js.Easing.Quadratic.InOut,
    'bounce-in': tween_js.Easing.Bounce.In,
    'bounce-out': tween_js.Easing.Bounce.Out,
    'bounce-in-out': tween_js.Easing.Bounce.InOut,
    none: function (p) { return ~~p; },
};
var Animation = (function () {
    function Animation(timelines, tweenGroup) {
        this.tweens = [];
        this.timelines = [];
        this.finishCount = 0;
        this.callbacks = new Map();
        this.objectCache = {};
        this.currIteration = 0;
        this.timelines = timelines;
        this.tweenGroup = tweenGroup;
    }
    Animation.prototype.on = function (eventName, callback) {
        if (!this.callbacks[eventName]) {
            this.callbacks.set(eventName, []);
        }
        this.callbacks.get(eventName).push(callback);
    };
    Animation.prototype.emit = function (eventName) {
        var callbacks = this.callbacks.get(eventName);
        if (!callbacks || !callbacks.length)
            return;
        callbacks.forEach(function (fn) { return fn(); });
    };
    Animation.prototype.checkFinish = function () {
        if (++this.finishCount == this.tweens.length) {
            if (++this.currIteration == this.iteration) {
                this.emit('finish');
            }
            else {
                if (this.stoped)
                    return;
                this.start();
            }
        }
    };
    Animation.prototype.getObjectCache = function (component, name) {
        var key = "" + component.gameObject.id + component.name;
        if (!this.objectCache[key]) {
            this.objectCache[key] = {};
        }
        if (this.objectCache[key][name]) {
            return this.objectCache[key][name];
        }
        var keys = name.split('.');
        var keyIndex = keys.length - 1;
        var property = component;
        for (var i = 0; i < keyIndex; i++) {
            property = property[keys[i]];
        }
        this.objectCache[key][name] = { property: property, key: keys[keyIndex] };
        return this.objectCache[key][name];
    };
    Animation.prototype.doAnim = function (_a) {
        var component = _a.component, name = _a.name, value = _a.value;
        var _b = this.getObjectCache(component, name), property = _b.property, key = _b.key;
        property[key] = value;
    };
    Animation.prototype.init = function () {
        var _this = this;
        this.checkFinishFunc = this.checkFinish.bind(this);
        var lastTween;
        this.timelines.forEach(function (timeline, i) {
            for (var j = 0; j < timeline.values.length - 1; j++) {
                var frame = timeline.values[j];
                var nextFrame = timeline.values[j + 1];
                var tween = new tween_js.Tween({ value: frame.value }, _this.tweenGroup)
                    .to({ value: nextFrame.value })
                    .duration(nextFrame.time - frame.time)
                    .easing(easingMap[frame.tween])
                    .onUpdate(function (props) {
                    _this.doAnim({
                        component: timeline.component,
                        name: timeline.name,
                        value: props.value,
                    });
                });
                if (j === 0) {
                    _this.tweens[i] = tween;
                }
                else {
                    lastTween.chain(tween);
                }
                lastTween = tween;
            }
            lastTween && lastTween.onComplete(function () { return _this.checkFinishFunc(); });
        });
    };
    Animation.prototype.play = function (iteration, currentTime) {
        if (iteration === void 0) { iteration = 1; }
        this.currentTime = currentTime;
        this.stoped = false;
        this.start();
        this.currIteration = 0;
        this.iteration = iteration;
    };
    Animation.prototype.start = function () {
        var _this = this;
        this.finishCount = 0;
        this.tweens.length = 0;
        this.init();
        this.tweens.forEach(function (tween) { return tween.start(_this.currentTime); });
    };
    Animation.prototype.pause = function () {
        var _this = this;
        this.tweens.forEach(function (tween) { return tween.pause(_this.currentTime); });
    };
    Animation.prototype.resume = function () {
        var _this = this;
        this.tweens.forEach(function (tween) { return tween.resume(_this.currentTime); });
    };
    Animation.prototype.stop = function () {
        this.stoped = true;
        this.tweens.forEach(function (tween) { return tween.stop(); });
    };
    Animation.prototype.destroy = function () {
        this.stop();
        this.tweens = null;
        this.timelines = null;
        this.objectCache = null;
        this.callbacks.clear();
        this.callbacks = null;
    };
    return Animation;
}());
var Animation$1 = Animation;

var Transition = (function (_super) {
    __extends(Transition, _super);
    function Transition() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.animations = {};
        _this.group = {};
        _this.currentTime = 0;
        _this.needPlay = [];
        return _this;
    }
    Transition.prototype.init = function (_a) {
        var group = (_a === void 0 ? { group: {} } : _a).group;
        this.group = group;
        this.tweenGroup = new tween_js.Group();
    };
    Transition.prototype.awake = function () {
        for (var name_1 in this.group) {
            this.newAnimation(name_1);
        }
    };
    Transition.prototype.play = function (name, iteration) {
        if (!name) {
            name = Object.keys(this.group)[0];
        }
        if (name && !this.animations[name] && this.group[name]) {
            this.newAnimation(name);
        }
        if (name && this.animations[name]) {
            this.needPlay.push({ name: name, iteration: iteration });
        }
    };
    Transition.prototype.stop = function (name) {
        if (!name) {
            for (var key in this.animations) {
                this.animations[key].stop();
            }
        }
        else {
            this.animations[name].stop();
        }
    };
    Transition.prototype.onPause = function () {
        for (var key in this.animations) {
            this.animations[key].pause();
        }
    };
    Transition.prototype.onResume = function () {
        for (var key in this.animations) {
            this.animations[key].resume();
        }
    };
    Transition.prototype.onDestroy = function () {
        for (var key in this.animations) {
            this.animations[key].destroy();
        }
        this.tweenGroup.removeAll();
        this.tweenGroup = null;
        this.group = null;
        this.animations = null;
        this.removeAllListeners();
    };
    Transition.prototype.update = function (e) {
        var e_1, _a;
        this.currentTime = e.time;
        for (var key in this.animations) {
            this.animations[key].currentTime = e.time;
        }
        this.tweenGroup.update(e.time);
        try {
            for (var _b = __values(this.needPlay), _c = _b.next(); !_c.done; _c = _b.next()) {
                var play = _c.value;
                this.animations[play.name].play(play.iteration, this.currentTime);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.needPlay.length = 0;
    };
    Transition.prototype.newAnimation = function (name) {
        var _this = this;
        var animation = new Animation$1(this.group[name], this.tweenGroup);
        animation.on('finish', function () { return _this.emit('finish', name); });
        this.animations[name] = animation;
    };
    Transition.componentName = 'Transition';
    return Transition;
}(eva_js.Component));
var Transition$1 = Transition;

var TransitionSystem = (function (_super) {
    __extends(TransitionSystem, _super);
    function TransitionSystem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'transition';
        return _this;
    }
    TransitionSystem.systemName = 'transition';
    return TransitionSystem;
}(eva_js.System));
var TransitionSystem$1 = TransitionSystem;

exports.Transition = Transition$1;
exports.TransitionSystem = TransitionSystem$1;
